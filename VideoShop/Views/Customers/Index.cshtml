@model IEnumerable<VideoShop.Models.Customer>

@{
    ViewBag.Title = "Customers";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Customers</h2>

<table id="customers" class="table table-bordered table-hover">
    <thead>
    <tr>
        <th>Customers</th>
        <th>Membership Type</th>
        <th>Delete</th>
    </tr>
    </thead>
    <tbody>
    @* we can comment out the following foreach block because the table will now be rendered using the DataTable in the below jQuery function. The table structure here in the markup is left as a placeholder for the DataTable. *@
    @*@foreach (var customer in Model)
        {
            <tr>
                <td>@Html.ActionLink(customer.Name, "Edit", "Customers", new { id = customer.Id }, null)</td>
                <td>@customer.MembershipType.Name</td>
                <td>
                    <button data-customer-id="@customer.Id" class="btn btn-link js-delete">Delete</button>
                </td>
            </tr>
        }*@
    </tbody>
</table>

@section scripts
{
    <script>
        $(document).ready(function () {
            //the following accesses the data via the API so we can pull just the data from the server and not all the additional markup for the view.
           var table = $("#customers").DataTable({
                ajax: {
                    url: "/api/customers",
                    dataSrc: ""
                },
                columns: [
                    {
                        data: "name",
                        render: function(data, type, customer) {
                            return "<a href='/customers/edit/" + customer.id + "'>" + customer.name + "</a>";
                        }
                    },
                    {
                        data: "membershipType.name"
                    },
                    {
                        data: "id",
                        render: function(data) {
                            return "<button class='btn-link js-delete' data-customer-id=" + data + ">Delete</button>";
                        }
                    }
                ]
            });

            $("#customers").on("click", ".js-delete", function () {
                var button = $(this);

                bootbox.confirm("Are you sure you want to delete this customer?", function(result) {
                    if (result) {
                        $.ajax({
                            url: "/api/customers/" + button.attr("data-customer-id"),
                            method: "DELETE",
                            success: function () {
                                // the following line of code will remove the customer from the DataTable and then redraw(refresh) the table instead of the code we had before(button.parents("tr").remove();) that just deleted the row from the table instead of the DataTable list that we have in memory.
                                table.row(button.parents("tr")).remove().draw();
                            }
                        });
                    }
                });
            });
        });
    </script>
}



